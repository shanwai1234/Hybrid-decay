2020-03-17 15:26:09,685 NanoPlot 1.28.4 started with arguments Namespace(N50=False, alength=False, bam=None, barcoded=False, color='#4CB391', colormap='Greens', cram=None, downsample=None, dpi=100, drop_outliers=False, fasta=None, fastq=['sW22-4_11-15-19.fastq.gz'], fastq_minimal=None, fastq_rich=None, font_scale=1, format='png', hide_stats=False, huge=False, listcolormaps=False, listcolors=False, loglength=False, maxlength=None, minlength=None, minqual=None, no_N50=False, outdir='.', path='./', percentqual=False, pickle=None, plots=['kde', 'dot'], prefix='', raw=False, readtype='1D', runtime_until=None, store=False, summary=None, threads=2, title=None, ubam=None, verbose=False)
2020-03-17 15:26:09,686 Python version is: 3.7.3 | packaged by conda-forge | (default, Dec  6 2019, 08:54:18)  [GCC 7.3.0]
2020-03-17 15:26:09,691 NanoPlot:  valid output format png
2020-03-17 15:26:09,712 Nanoget: Starting to collect statistics from plain fastq file.
2020-03-17 15:26:09,712 Nanoget: Decompressing gzipped fastq sW22-4_11-15-19.fastq.gz
2020-03-17 15:29:06,352 Reduced DataFrame memory usage from 1.0555343627929688Mb to 0.7036895751953125Mb
2020-03-17 15:29:06,367 Nanoget: Gathered all metrics of 46117 reads
2020-03-17 15:29:06,493 Calculated statistics
2020-03-17 15:29:06,494 Using sequenced read lengths for plotting.
2020-03-17 15:29:06,499 NanoPlot:  Valid color #4CB391.
2020-03-17 15:29:06,499 NanoPlot:  Valid colormap Greens.
2020-03-17 15:29:06,501 NanoPlot:  Creating length plots for Read length.
2020-03-17 15:29:06,502 NanoPlot:  Using 46117 reads maximum of 245567bp.
2020-03-17 15:29:13,888 Nanoplotter: orca not found, not creating static image of html. See https://github.com/plotly/orca
2020-03-17 15:29:13,888 
The orca executable is required to export figures as static images,
but it could not be found on the system path.

Searched for executable 'orca' on the following path:
    /home/springer/liang795/.nextflow/assets/nf-core/nanoseq/bin
    /opt/conda/envs/nf-core-nanoseq-1.0.0/bin
    /opt/conda/bin
    /usr/local/sbin
    /usr/local/bin
    /usr/sbin
    /usr/bin
    /sbin
    /bin

If you haven't installed orca yet, you can do so using conda as follows:

    $ conda install -c plotly plotly-orca

Alternatively, see other installation methods in the orca project README at
https://github.com/plotly/orca

After installation is complete, no further configuration should be needed.

If you have installed orca, then for some reason plotly.py was unable to
locate it. In this case, set the `plotly.io.orca.config.executable`
property to the full path of your orca executable. For example:

    >>> plotly.io.orca.config.executable = '/path/to/orca'

After updating this executable property, try the export operation again.
If it is successful then you may want to save this configuration so that it
will be applied automatically in future sessions. You can do this as follows:

    >>> plotly.io.orca.config.save()

If you're still having trouble, feel free to ask for help on the forums at
https://community.plot.ly/c/api/python
Traceback (most recent call last):
  File "/opt/conda/envs/nf-core-nanoseq-1.0.0/lib/python3.7/site-packages/nanoplotter/plot.py", line 60, in save_static
    pio.write_image(self.fig, self.path.replace('html', 'png'))
  File "/opt/conda/envs/nf-core-nanoseq-1.0.0/lib/python3.7/site-packages/plotly/io/_orca.py", line 1767, in write_image
    fig, format=format, scale=scale, width=width, height=height, validate=validate
  File "/opt/conda/envs/nf-core-nanoseq-1.0.0/lib/python3.7/site-packages/plotly/io/_orca.py", line 1532, in to_image
    ensure_server()
  File "/opt/conda/envs/nf-core-nanoseq-1.0.0/lib/python3.7/site-packages/plotly/io/_orca.py", line 1390, in ensure_server
    validate_executable()
  File "/opt/conda/envs/nf-core-nanoseq-1.0.0/lib/python3.7/site-packages/plotly/io/_orca.py", line 1087, in validate_executable
    instructions=install_location_instructions,
ValueError: 
The orca executable is required to export figures as static images,
but it could not be found on the system path.

Searched for executable 'orca' on the following path:
    /home/springer/liang795/.nextflow/assets/nf-core/nanoseq/bin
    /opt/conda/envs/nf-core-nanoseq-1.0.0/bin
    /opt/conda/bin
    /usr/local/sbin
    /usr/local/bin
    /usr/sbin
    /usr/bin
    /sbin
    /bin

If you haven't installed orca yet, you can do so using conda as follows:

    $ conda install -c plotly plotly-orca

Alternatively, see other installation methods in the orca project README at
https://github.com/plotly/orca

After installation is complete, no further configuration should be needed.

If you have installed orca, then for some reason plotly.py was unable to
locate it. In this case, set the `plotly.io.orca.config.executable`
property to the full path of your orca executable. For example:

    >>> plotly.io.orca.config.executable = '/path/to/orca'

After updating this executable property, try the export operation again.
If it is successful then you may want to save this configuration so that it
will be applied automatically in future sessions. You can do this as follows:

    >>> plotly.io.orca.config.save()

If you're still having trouble, feel free to ask for help on the forums at
https://community.plot.ly/c/api/python

2020-03-17 15:29:15,993 Created length plots
2020-03-17 15:29:15,998 NanoPlot:  Creating Read lengths vs Average read quality plots using statistics from 46117 reads.
2020-03-17 15:29:24,583 Created LengthvsQual plot
2020-03-17 15:29:24,584 Writing html report.
2020-03-17 15:29:33,548 Finished!
